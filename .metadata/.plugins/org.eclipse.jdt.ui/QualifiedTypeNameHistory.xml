<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
    <fullyQualifiedTypeName name="org.springframework.core.Ordered"/>
    <fullyQualifiedTypeName name="org.springframework.boot.web.servlet.FilterRegistrationBean"/>
    <fullyQualifiedTypeName name="org.springframework.web.filter.CorsFilter"/>
    <fullyQualifiedTypeName name="org.aspectj.weaver.ast.Instanceof"/>
    <fullyQualifiedTypeName name="java.lang.Integer"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PatchMapping"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestParam"/>
    <fullyQualifiedTypeName name="com.netflix.discovery.converters.Auto"/>
    <fullyQualifiedTypeName name="com.proyectspringoauth.client.UserClientFeign"/>
    <fullyQualifiedTypeName name="com.proyectspringoauth.services.UserService"/>
    <fullyQualifiedTypeName name="com.usercommons.model.entity.User"/>
    <fullyQualifiedTypeName name="com.proyectspringoauth.services.IUserService"/>
    <fullyQualifiedTypeName name="org.springframework.core.env.Environment"/>
    <fullyQualifiedTypeName name="org.springframework.security.web.authentication.AuthenticationSuccessHandler"/>
    <fullyQualifiedTypeName name="org.springframework.security.web.server.authentication.ServerAuthenticationSuccessHandler"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PutMapping"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestBody"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PathVariable"/>
    <fullyQualifiedTypeName name="org.slf4j.Logger"/>
    <fullyQualifiedTypeName name="org.slf4j.LoggerFactory"/>
    <fullyQualifiedTypeName name="com.oauth1.security.event.EventSuccessFailureHandler"/>
    <fullyQualifiedTypeName name="com.user1commons1.model.entity.User"/>
    <fullyQualifiedTypeName name="feign.FeignException"/>
    <fullyQualifiedTypeName name="org.springframework.security.authentication.AuthenticationEventPublisher"/>
    <fullyQualifiedTypeName name="org.springframework.security.web.authentication.WebAuthenticationDetails"/>
    <fullyQualifiedTypeName name="com.oauth1.service.IUserDetailService"/>
    <fullyQualifiedTypeName name="org.springframework.web.reactive.config.EnableWebFlux"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.Authentication"/>
    <fullyQualifiedTypeName name="java.security.Key"/>
    <fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Value"/>
    <fullyQualifiedTypeName name="javax.crypto.SecretKey"/>
    <fullyQualifiedTypeName name="io.jsonwebtoken.security.Keys"/>
    <fullyQualifiedTypeName name="java.util.Base64"/>
    <fullyQualifiedTypeName name="io.jsonwebtoken.JwtBuilder"/>
    <fullyQualifiedTypeName name="io.jsonwebtoken.Jwt"/>
    <fullyQualifiedTypeName name="io.jsonwebtoken.Jwts"/>
    <fullyQualifiedTypeName name="java.util.List"/>
    <fullyQualifiedTypeName name="java.util.Collection"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.GrantedAuthority"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.authority.SimpleGrantedAuthority"/>
    <fullyQualifiedTypeName name="java.util.stream.Collectors"/>
    <fullyQualifiedTypeName name="org.springframework.stereotype.Component"/>
    <fullyQualifiedTypeName name="reactor.core.publisher.Mono"/>
    <fullyQualifiedTypeName name="org.springframework.http.HttpHeaders"/>
    <fullyQualifiedTypeName name="org.springframework.security.authentication.ReactiveAuthenticationManager"/>
    <fullyQualifiedTypeName name="org.springframework.security.authentication.UsernamePasswordAuthenticationToken"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.context.ReactiveSecurityContextHolder"/>
    <fullyQualifiedTypeName name="org.springframework.web.server.WebFilterChain"/>
    <fullyQualifiedTypeName name="org.springframework.context.annotation.Bean"/>
    <fullyQualifiedTypeName name="org.springframework.security.config.web.server.ServerHttpSecurity"/>
    <fullyQualifiedTypeName name="org.springframework.http.HttpMethod"/>
    <fullyQualifiedTypeName name="org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity"/>
    <fullyQualifiedTypeName name="org.springframework.security.web.server.SecurityWebFilterChain"/>
    <fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Autowired"/>
    <fullyQualifiedTypeName name="org.springframework.web.server.WebFilter"/>
    <fullyQualifiedTypeName name="org.springframework.security.config.web.server.SecurityWebFiltersOrder"/>
    <fullyQualifiedTypeName name="com.google.inject.internal.Errors"/>
    <fullyQualifiedTypeName name="brave.Tracer"/>
    <fullyQualifiedTypeName name="java.lang.StringBuilder"/>
    <fullyQualifiedTypeName name="javax.persistence.Table"/>
</qualifiedTypeNameHistroy>
